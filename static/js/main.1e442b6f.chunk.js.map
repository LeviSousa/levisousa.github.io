{"version":3,"sources":["pages/videogame-soundtracks/assets/soundtracks.ts","pages/videogame-soundtracks/sections/soundtrack-list/index.tsx","components/youtube-player/index.tsx","pages/videogame-soundtracks/sections/soundtrack-player/index.tsx","pages/videogame-soundtracks/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SOUNDTRACKS","rOmHpI0MMKE","name","youtubeId","SoundtrackList","setPlayingVideoId","Object","values","map","soundtrack","type","onClick","YoutubePlayer","videoId","width","height","src","title","frameBorder","allow","allowFullScreen","SoundtrackPlayer","playingVideoId","VideogameSoundtracks","useState","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAKaA,EAA6C,CACxDC,YAAa,CACXC,KAAM,aACNC,UAAW,eAEb,cAAe,CACbD,KAAM,QACNC,UAAW,gB,OCNFC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,kBAAH,OAC5B,6BACGC,OAAOC,OAAOP,GAAaQ,KAAI,SAACC,GAAD,OAC9B,6BACE,wBACEC,KAAK,SACLC,QAAS,kBAAMN,EAAkBI,EAAWN,YAF9C,SAIGM,EAAWP,QALPO,EAAWN,iBCLbS,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAC3B,wBACEC,MAAM,MACNC,OAAO,MACPC,IAAG,wCAAmCH,GACtCI,MAAM,uBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,KCNNC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OAC9B,cAAC,EAAD,CAAeT,QAASS,KCJbC,EAAuB,WAClC,MAA4CC,qBAA5C,mBAAOF,EAAP,KAAuBjB,EAAvB,KAEA,OACE,qCACGiB,GACE,cAAC,EAAD,CAAkBA,eAAgBA,IACrC,cAAC,EAAD,CAAgBjB,kBAAmBA,Q,MCC1BoB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCYSC,EAhBS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MACnB,YAEO,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCNhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1e442b6f.chunk.js","sourcesContent":["type Soundtrack = {\n  name: string;\n  youtubeId: string;\n};\n\nexport const SOUNDTRACKS: { [key: string]: Soundtrack } = {\n  rOmHpI0MMKE: {\n    name: 'God of War',\n    youtubeId: 'rOmHpI0MMKE',\n  },\n  '3GRKJ87S5cI': {\n    name: 'Hades',\n    youtubeId: '3GRKJ87S5cI',\n  },\n};\n","import { SOUNDTRACKS } from '../../assets/soundtracks';\n\ntype SoundtrackListProps = {\n  setPlayingVideoId: (videoId: string) => void;\n}\n\nexport const SoundtrackList = ({ setPlayingVideoId }: SoundtrackListProps) => (\n  <ul>\n    {Object.values(SOUNDTRACKS).map((soundtrack) => (\n      <li key={soundtrack.youtubeId}>\n        <button\n          type=\"button\"\n          onClick={() => setPlayingVideoId(soundtrack.youtubeId)}\n        >\n          {soundtrack.name}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n","type YoutubePlayerProps = {\n  videoId: string;\n}\n\nexport const YoutubePlayer = ({ videoId }: YoutubePlayerProps) => (\n  <iframe\n    width=\"560\"\n    height=\"315\"\n    src={`https://www.youtube.com/embed/${videoId}`}\n    title=\"YouTube video player\"\n    frameBorder=\"0\"\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    allowFullScreen\n  />\n);\n","import { YoutubePlayer } from '../../../../components/youtube-player';\n\ntype SoundtrackPlayerProps = {\n  playingVideoId: string;\n}\n\nexport const SoundtrackPlayer = ({ playingVideoId }: SoundtrackPlayerProps) => (\n  <YoutubePlayer videoId={playingVideoId} />\n);\n","import { useState } from 'react';\nimport { SoundtrackList, SoundtrackPlayer } from './sections';\n\nexport const VideogameSoundtracks = () => {\n  const [playingVideoId, setPlayingVideoId] = useState<string>();\n\n  return (\n    <>\n      {playingVideoId\n      && <SoundtrackPlayer playingVideoId={playingVideoId} />}\n      <SoundtrackList setPlayingVideoId={setPlayingVideoId} />\n    </>\n  );\n};\n","import { VideogameSoundtracks } from './pages';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VideogameSoundtracks />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({\n        getCLS, getFID, getFCP, getLCP, getTTFB,\n      }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}